{"version":3,"sources":["components/header/index.js","server.js","components/content/index.js","components/articleList/index.js","components/commentList/index.js","components/commentRelease/index.js","pages/home/index.js","pages/essays/index.js","pages/details/index.js","pages/comment/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","href","Component","http","post","get","serverUrl","formatUri","url","uri","indexOf","data","Promise","resolve","reject","axios","params","then","res","headers","Accept","Content-Type","Content","state","typeList","_this2","this","code","setState","message","error","map","item","index","key","remark","name","ArticleList","list","categoryId","forEach","dataAdd","moment","format","concat","id","title","CommentList","commentList","status","dateAdd","content","FormItem","es_form","Item","TextArea","input","CommentRelease","token","drawerVisible","handleSubmit","e","_this","preventDefault","props","form","validateFields","err","values","qs","stringify","comment","type","console","log","window","location","drawerShow","drawerClose","deviceId","deviceName","mobile","pwd","getFieldDecorator","onClick","icon","size","theme","drawer","width","onClose","visible","onSubmit","hideRequiredMark","rules","required","rows","placeholder","es_button","htmlType","block","components_commentRelease","create","HomePage","components_header","components_content","Essays","components_articleList","Details","details","match","dangerouslySetInnerHTML","__html","Comment","src_components_commentList","App","react_router","exact","path","render","component","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd7f3a4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css'\n\nclass Header extends Component {\n  render() {\n    return(\n      <div className='header'>\n        <Link to='/'><span>monster.com</span></Link><a href='https://github.com/Monsterthirteen/blog'><b> (</b><i> src </i><b>) </b></a>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import axios from 'axios';\n\nlet http = {\n  post: \"\",\n  get: \"\"\n}\n\nconst serverUrl = 'https://api.it120.cc/monsterthirteen/';\n\nfunction formatUri(url) {\n  let uri = ''\n  uri = process.env.NODE_ENV === 'production' ? '../' + url: './' + url\n  if (url.indexOf('http') > -1) uri = url\n  return uri\n} \n\nhttp.get = ( url, data) => {\n  return new Promise((resolve, reject) => {\n    axios.get(formatUri(serverUrl + url),{\n      params: data\n    })\n    .then(res=>{\n      resolve(res.data)\n    })\n  })\n}\n\nhttp.post = ( url, data ) => {\n  return new Promise((resolve, reject) => {\n    axios.post(formatUri(serverUrl + url), data, {\n      headers: {\n        'Accept':'*/*',\n        'Content-Type':'application/x-www-form-urlencoded'\n      }\n    })\n    .then(res=>{\n      resolve(res.data)\n    })\n  })\n}\n\nexport default http;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport http from '../../server';\nimport { message } from 'antd';\nimport './index.css';\n\nclass Content extends Component { \n\n  state = {\n    typeList:[]\n  }\n\n  componentWillMount() {\n    http.get('cms/category/list')\n    .then(res => {\n      if(res.code !== 0){\n        message.error(res.message)\n        return\n      }\n      this.setState({\n        typeList: res.data\n      });\n    });\n  }\n\n  render(){\n    const { typeList } = this.state;\n\n    return(\n      <div className='homeContent'>\n        <h1 className='contentTitle'>Live Long and Code</h1>\n        <ul className='typeContainer'>\n          {\n            typeList.map((item,index) => (\n              <li className='typeList' key={ index }>\n                <Link to = {item.remark}>{item.name}</Link>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nContent.propTypes = {\n  typeList: PropTypes.array\n}\n\n\nexport default Content;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport http from '../../server';\nimport { message } from 'antd';\nimport moment from 'moment';\nimport './index.css'\n\nclass ArticleList extends Component {\n\n  state = {\n    list: []\n  }\n\n  componentWillMount() {\n    http.get('cms/news/list',{\n      categoryId: 0\n    })\n    .then(res => {\n      if(res.code !== 0) {\n        message.error(res.message)\n        return\n      }\n      const data = res.data\n      data.forEach(item => {\n        item.dataAdd = moment(item.dataAdd).format('ll')\n      })\n      this.setState({\n        list: data\n      });\n    });\n  }\n\n  render() {\n\n    const { list } = this.state;\n\n    return(\n      <div className='listContainer'>\n        <ul>\n          {\n            list.map((item,index) => (\n              <li key={ index }>\n                <span>{ item.dataAdd }</span>\n                <Link to={`/details/${item.id}`}>{ item.title }</Link>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nArticleList.propTypes = { \n  list:PropTypes.array\n}\n\nexport default ArticleList;","import React, { Component } from 'react';\nimport http from '../../server';\nimport moment from 'moment';\nimport './index.css'\n\nclass CommentList extends Component {\n\n  state = {\n    commentList: [],\n  }\n\n  componentWillMount() {\n    http.get('comment/list',{status:0})\n    .then(res => {\n      if(res.code === 0) {\n        const data = res.data\n        data.forEach(item => {\n          item.dateAdd = moment(item.dateAdd).format('ll HH:mm')\n        })\n        this.setState({\n          commentList: data,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { commentList } = this.state;\n    return (\n      <div className='commentList'>\n        {\n          commentList.map((item, index) => (\n            <div key={index}>\n              <i>{item.dateAdd}</i>\n              <p>{item.content}</p>\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default CommentList;","import React, { Component } from 'react';\nimport { Form, Input, Button, Icon, Drawer } from 'antd';\nimport qs from 'qs';\nimport './index.css';\nimport http from '../../server';\n\nconst FormItem = Form.Item;\nconst TextArea = Input.TextArea;\n\nclass CommentRelease extends Component {\n\n  state = {\n    token: null,\n    drawerVisible: false,\n  }\n\n  componentWillMount() {\n    const data = qs.stringify({\n      \"deviceId\": '1',\n      \"deviceName\": '1',\n      \"mobile\": '13950105765',\n      \"pwd\": '123456'\n    })\n    http.post('user/m/login',data)\n    .then(res => {\n      this.setState({\n        token: res.data.token\n      })\n    })\n  }\n\n  handleSubmit = (e) => {\n    const { token } = this.state;\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      const data = qs.stringify({\n        content: values.comment,\n        type: 0,\n        token: token,\n      })\n      if(!err) {\n        http.post('comment/add',data)\n        .then( res => {\n          console.log(res)\n          if(res.code === 0){\n            window.location.href=\"/comment\"\n          }\n        })\n      }\n    })\n  }\n\n  drawerShow = () => {\n    this.setState({\n      drawerVisible: true\n    })\n  }\n\n  drawerClose = () => {\n    this.setState({\n      drawerVisible: false\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className='commentRelease'>\n        <div className='releaseIcon' onClick={this.drawerShow}>\n          <Icon type='edit' size='large' theme='twoTone'/>\n        </div>\n        <Drawer\n          title = 'Comment'\n          width = {440}\n          onClose = {this.drawerClose}\n          visible = {this.state.drawerVisible}\n        >\n          <Form onSubmit={this.handleSubmit} hideRequiredMark>\n            <FormItem>\n              {\n                getFieldDecorator('comment', {\n                  rules: [{ required: true, message: 'It can not be null' }],\n                })(\n                  <TextArea rows={5} placeholder='leave your comment'/>\n                )\n              }\n            </FormItem>\n            <FormItem>\n              <Button type='primary' size='large' htmlType='submit' className='commentButton' block>Send</Button>\n            </FormItem>\n          </Form>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(CommentRelease);","import React, { Component } from 'react';\nimport { Header, Content } from '../../components';\n\nclass HomePage extends Component {\n  render() {\n    return(\n      <div className='pageContainer'>\n        <Header/>\n        <Content/>\n      </div>\n    )\n  }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport { Header, ArticleList } from '../../components';\n\nclass Essays extends Component {\n  render() {\n    return(\n      <div className='pageContainer'>\n        <Header/>\n        <ArticleList/>\n      </div>\n    )\n  }\n}\n\nexport default Essays;","import React, { Component } from 'react';\nimport http from '../../server';\nimport { Header } from '../../components';\nimport { message } from 'antd';\nimport moment from 'moment';\nimport './index.css';\n\nclass Details extends Component {\n\n  state = {\n    details: {}\n  }\n\n  componentWillMount() {\n    http.get('cms/news/detail',{\n      id: this.props.match.params.id\n    })\n    .then(res => {\n      if(res.code !== 0){\n        message.error(res.message)\n        return\n      }\n      res.data.dataAdd = moment(res.data.dataAdd).format('ll')\n      this.setState({\n        details: res.data\n      });\n    });\n  }\n\n  render(){\n    const { details } = this.state;\n    return(\n      <div className='pageContainer'>\n        <Header/>\n        <div className='article'>\n          <h1>{details.title}</h1>\n          <p>{details.dataAdd}</p>\n          <div dangerouslySetInnerHTML={{__html: details.content}}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React, { Component } from 'react';\nimport { Header, CommentList, CommentRelease } from '../../components';\n\nclass Comment extends Component {\n  render() {\n    return (\n      <div className='pageContainer'>\n        <Header/>\n        <CommentList/>\n        <CommentRelease/>\n      </div>\n    )\n  }\n}\n\nexport default Comment;","import React, { Component } from 'react';\nimport { HomePage, Essays, Details, Comment } from './pages';\nimport { Route, HashRouter as Router, Redirect} from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" render = {() => <Redirect to=\"/home\" />}/>\n          <Route path='/home' component={HomePage}/>\n          <Route path='/essays' component={Essays}/>\n          <Route path='/details/:id' component={Details}/>\n          <Route path='/comment' component={Comment}></Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}